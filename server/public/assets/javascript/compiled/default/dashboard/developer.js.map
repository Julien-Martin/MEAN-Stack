{"version":3,"sources":["default/dashboard/developer.ts"],"names":[],"mappings":"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","file":"developer.js","sourcesContent":["///<reference path=\"../javascript/angularjs/Typings/angular.d.ts\"/>\n///<reference path=\"../remoteData.ts\"/>\n\nvar app = angular.module('myApp', []);\n\nclass angDeveloper {\n\n    private _httpService:ng.IHttpService = $http;\n    private _scope;\n\n    public view;\n\n    public console;\n\n    public clientRemote:RemoteData;\n    public cssStructRemote:RemoteData;\n    public clients;\n\n    public modelsRemote:RemoteData;\n    public modelDetails;\n    public modelPropertyNew;\n\n    public userDialog;\n\n\n    $inject = [\"$http\", \"$scope\"];\n\n    constructor($http:ng.IHttpService, $scope) {\n        //injections\n        this._httpService = $http;\n        this._scope = $scope;\n        this.console = console;\n\n        //dom related\n        this.userDialog = document.querySelector('#modal-example');\n        if (!this.userDialog.showModal) {\n            dialogPolyfill.registerDialog(this.userDialog);\n        }\n\n\n        //data related\n        this.view = \"Home\";\n        this.clientRemote = new RemoteData(\n            \"/dashboard/users\",\n            \"/dashboard/users\",\n            \"/dashboard/users\",\n            \"/dashboard/users\",\n            {\n                username: \"\",\n                password: \"\",\n                groups: [],\n                rights: 5\n            },\n            this._httpService\n        );\n        this.cssStructRemote = new RemoteData(\n            \"/dashboard/cssstruct\",\n            \"/dashboard/cssstruct\",\n            \"/dashboard/cssstruct\",\n            \"/dashboard/cssstruct\",\n            {\n                data: {},\n            },\n            this._httpService\n        );\n        this.cssStructRemote.getAllData()\n            .then(_ => {\n                console.log(this.cssStructRemote.fetchedData);\n                this.cssStructRemote.localData.data = this.cssStructRemote.fetchedData;\n            })\n        ;\n        this.modelsRemote = new RemoteData(\n            \"/dashboard/models\",\n            \"/dashboard/models\",\n            \"/dashboard/models\",\n            \"/dashboard/models\",\n            {\n                name: \"\",\n                fields: []\n            },\n            this._httpService\n        );\n        this.clientRemote.getAllData();\n        this.modelsRemote.getAllData()\n            .then(data => {\n                console.log(data);\n            })\n        ;\n        this.modelDetails = {};\n        this.modelPropertyNew = {\n            name: \"\",\n            type: \"String\",\n            ref: \"\",\n            unique: false,\n            required: false,\n            auto: false,\n        };\n    }\n\n    showModelDialog(index) {\n        this.modelDetails = this.modelsRemote.fetchedData[index];\n        this.userDialog.showModal();\n    }\n\n    closeModelDialog() {\n        this.userDialog.close();\n    }\n\n    modelAddProperty() {\n        this.modelsRemote.localData.fields.push({\n            auto: this.modelPropertyNew.auto,\n            unique: this.modelPropertyNew.unique,\n            required: this.modelPropertyNew.required,\n            name: this.modelPropertyNew.name,\n            type: this.modelPropertyNew.type,\n            ref: this.modelPropertyNew.ref,\n        });\n        this.modelClearProperty();\n    }\n\n    removeModelProperty(index){\n        this.modelsRemote.localData.fields.splice(index, 1);\n    }\n\n    modelClearProperty(){\n        this.modelPropertyNew.auto = false;\n        this.modelPropertyNew.unique = false;\n        this.modelPropertyNew.required = false;\n        this.modelPropertyNew.name = \"\";\n        this.modelPropertyNew.type = \"String\";\n        this.modelPropertyNew.ref = \"\";\n    }\n\n    modelUpdate(){\n        this.modelsRemote.localData.name = this.modelDetails.name;\n        for(var propertyIndex in this.modelDetails.schema.paths){\n            var property = this.modelDetails.schema.paths[propertyIndex];\n            console.log(property);\n            var field:{name: String, unique: boolean, required: boolean, auto: boolean, ref: string, type: string} = {};\n            field.name = property.path;\n            field.unique = property.options.unique;\n            field.required = property.options.required;\n            field.auto = property.options.auto;\n            field.ref = property.options.ref;\n            field.type = property.instance == \"ObjectID\" ? \"Schema.ObjectId\" : property.instance;\n            this.modelsRemote.localData.fields.push(field);\n        }\n        this.modelsRemote.updateRemote(this.modelDetails.name);\n        alert(\"This page will reload in 5s\");\n        setTimeout(function () {\n            location.reload();\n        }, 5000);\n    }\n\n    postModelToRemote(){\n        this.clientRemote.postToRemote();\n        this.modelsRemote.localData.fields = [];\n    }\n}\n\n\napp.controller('angDeveloperController', angDeveloper);"]}