{"version":3,"names":[],"mappings":"","sources":["kvmScrollAnchor.js"],"sourcesContent":["document.getAllElementsWithAttribute = function (attribute) {\n    var matchingElements = [];\n    var allElements = document.getElementsByTagName('*');\n    for (var i = 0, n = allElements.length; i < n; i++) {\n        if (allElements[i].getAttribute(attribute) !== null) {\n            // Element exists with attribute. Add to array.\n            matchingElements.push(allElements[i]);\n        }\n    }\n    return matchingElements;\n};\n\n\nvar ScrollAnchor = function(anchorId, associatedTag){\n\n    this.associatedTag = document.getElementById(associatedTag) || false;\n    this.anchor = document.getElementById(anchorId) || false;\n    this.anchorOffset = null;\n    this.originalDeltaY = null;\n    var anchor = this.anchor;\n    var anchorOffset = this.anchorOffset;\n    var originalDeltaY = this.originalDeltaY;\n\n    component = window;\n\n    var animate = (function(){\n        var action = window.requestAnimationFrame ||\n            window.webkitRequestAnimationFrame ||\n            window.mozRequestAnimationFrame ||\n            window.oRequestAnimationFrame ||\n            window.msRequestAnimationFrame ||\n            function (callback) {\n                window.setTimeout(callback, 1000 / 60);\n            };\n        return function(runner){\n            action.call(window, runner);\n        };\n    })();\n\n    var scroll = function(nextStep){\n        if(nextStep == null) {\n            return component.scrollY != null ? component.scrollY : component.scrollTop;\n        }\n        else if(originalDeltaY > 0 ? nextStep < anchorOffset : nextStep >= anchorOffset) {\n            component.scrollTo ? component.scrollTo(0, anchorOffset):component.scrollTop = anchorOffset;\n            return 0;\n        }\n        else {\n            component.scrollTo ? component.scrollTo(0, nextStep) : component.scrollTop = nextStep;\n            return nextStep;\n        }\n    };\n\n    var speedConduct = function(current){\n        var progress = 1 - Math.abs(current - anchorOffset)/originalDeltaY;\n        var speed = (0.5 - Math.abs(progress - 0.5)) * 2;\n        var displacement = 20 + Math.floor(100*speed*speed);\n        console.log(displacement);\n        return displacement;\n    };\n\n    this.debug = function () {\n        console.log(scroll() - ( this.anchor ? this.anchor.offsetTop : 0));\n    };\n\n    this.scrollTo = function(time){\n        var DEFAULT_TIME = 1000;\n        if(time == null) {\n            time = DEFAULT_TIME;\n\n        }\n        var originY = scroll();\n        this.anchorOffset = anchorOffset = ( this.anchor ? this.anchor.offsetTop : 0);\n        this.originalDeltaY = originalDeltaY = scroll() - this.anchorOffset;\n        var currentY = originY;\n        var originSpeed = this.originalDeltaY / (time / 60);\n        var currentSpeed;\n\n        if(originalDeltaY == 0){\n            return 0;\n        }\n\n        (function operate(){\n            currentSpeed = speedConduct(currentY);\n            currentY = currentY - (originalDeltaY >= 0 ?  1 : -1) * currentSpeed;\n            var debug = scroll(currentY);\n            if(debug !== 0 && window.scrollY == currentY) {\n                animate(operate);\n            } else {\n                window.scrollTo(0, anchorOffset);\n            }\n        })();\n    };\n};\nScrollAnchor.top = (new ScrollAnchor()).scrollTo;\nScrollAnchor.addElementAsTopSensitive = function (element) {\n    window.addEventListener(\"scroll\", function(){\n        if(window.scrollY == 0){\n            element.classList.add(\"scrollTop\");\n        } else {\n            element.classList.remove(\"scrollTop\");\n        }\n    });\n    if(window.scrollY == 0){\n        element.classList.add(\"scrollTop\");\n    }\n};\nScrollAnchor.addElementAsNearTopSensitive = function (element, distanceArg) {\n    var distance = distanceArg;\n    window.addEventListener(\"scroll\", function(){\n        if(window.scrollY < distance){\n            element.classList.add(\"nearTop\");\n        } else {\n            element.classList.remove(\"nearTop\");\n        }\n    });\n    if(window.scrollY < distance){\n        element.classList.add(\"scrollTop\");\n    }\n};\nScrollAnchor.loadTopSensitiveElements = function () {\n    var elements = document.getAllElementsWithAttribute(\"data-topSensitive\");\n    for(var elementIndex in elements){\n        ScrollAnchor.addElementAsTopSensitive(elements[elementIndex])\n    }\n    elements = document.getAllElementsWithAttribute(\"data-nearTopSensitive\");\n    for(elementIndex in elements){\n        var element = elements[elementIndex];\n        if(element.getAttribute(\"data-nearTopSensitive\")){\n            ScrollAnchor.addElementAsNearTopSensitive(element, element.getAttribute(\"data-nearTopSensitive\"));\n        } else {\n            ScrollAnchor.addElementAsTopSensitive(element);\n        }\n    }\n};\n\n\nwindow.anchors = [];\nwindow.addEventListener(\"scroll\", function () {\n    var soffset = 100000;\n    var manchor = false;\n    for(var anchorIndex in window.anchors){\n        var anchor = window.anchors[anchorIndex];\n        if(anchor.associatedTag){\n            anchor.associatedTag.classList.remove(\"anchorActive\");\n        }\n        var delta = Math.abs(anchor.anchor.offsetTop - window.scrollY);\n        if(delta < soffset){\n            soffset = delta;\n            manchor = anchor;\n        }\n    }\n    if(manchor){\n        if(manchor.associatedTag) {\n            manchor.associatedTag.classList.add(\"anchorActive\");\n        }\n    }\n}, false);\n"],"file":"kvmScrollAnchor.js"}